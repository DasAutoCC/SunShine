<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.lkz.blog.web.mapper.CommentMapper" >
  <resultMap id="BaseResultMap" type="com.lkz.blog.pojo.Comment" >
    <id column="comment_id" property="commentId" jdbcType="BIGINT" />
    <result column="blog_id" property="blogId" jdbcType="BIGINT" />
    <result column="comment_user" property="commentUser" jdbcType="BIGINT" />
    <result column="reply_for" property="replyFor" jdbcType="BIGINT" />
    <result column="star_num" property="starNum" />
    <result column="comment_content" property="commentContent" jdbcType="VARCHAR" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="is_delete" property="isDelete" jdbcType="TINYINT" />
  </resultMap>

  <resultMap id="BaseResultMapWithUser" type="com.lkz.blog.pojo.Comment" >
    <id column="comment_id" property="commentId" jdbcType="BIGINT" />
    <result column="blog_id" property="blogId" jdbcType="BIGINT" />
    <result column="comment_user" property="commentUser" jdbcType="BIGINT" />
    <result column="reply_for" property="replyFor" jdbcType="BIGINT" />
    <result column="star_num" property="starNum" />
    <result column="comment_content" property="commentContent" jdbcType="VARCHAR" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="dd" property="isDelete" jdbcType="TINYINT" />
    <result column="nick_name" property="nickName" />
    <result column="user_head" property="userHead" />
  </resultMap>

  <sql id="Base_Column_List" >
    comment_id, blog_id, comment_user, reply_for, star_num, comment_content, create_time, blog_comment.is_delete
  </sql>

  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from blog_comment
    where comment_id = #{commentId,jdbcType=BIGINT}
  </select>

  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from blog_comment
    where comment_id = #{commentId,jdbcType=BIGINT}
  </delete>

  <insert id="insert" parameterType="com.lkz.blog.pojo.Comment" >
    insert into blog_comment (comment_id, blog_id, comment_user, reply_for, star_num,
      comment_content, create_time, is_delete
      )
    values (default , #{blogId,jdbcType=BIGINT}, #{commentUser,jdbcType=BIGINT},#{replyFor},#{starNum},
      #{commentContent,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, #{isDelete,jdbcType=TINYINT}
      )
  </insert>

  <insert id="insertSelective" parameterType="com.lkz.blog.pojo.Comment" >
    insert into blog_comment
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="commentId != null" >
        comment_id,
      </if>
      <if test="blogId != null" >
        blog_id,
      </if>
      <if test="commentUser != null" >
        comment_user,
      </if>
      <if test="commentContent != null" >
        comment_content,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="isDelete != null" >
        is_delete,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="commentId != null" >
        #{commentId,jdbcType=BIGINT},
      </if>
      <if test="blogId != null" >
        #{blogId,jdbcType=BIGINT},
      </if>
      <if test="commentUser != null" >
        #{commentUser,jdbcType=BIGINT},
      </if>
      <if test="commentContent != null" >
        #{commentContent,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="isDelete != null" >
        #{isDelete,jdbcType=TINYINT},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.lkz.blog.pojo.Comment" >
    update blog_comment
    <set >
      <if test="blogId != null" >
        blog_id = #{blogId,jdbcType=BIGINT},
      </if>
      <if test="commentUser != null" >
        comment_user = #{commentUser,jdbcType=BIGINT},
      </if>
      <if test="replyFor!=null">
        reply_for = #{replyFor},
      </if>
      <if test="starNum != null" >
        star_num = #{starNum},
      </if>
      <if test="commentContent != null" >
        comment_content = #{commentContent,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="isDelete != null" >
        is_delete = #{isDelete,jdbcType=TINYINT},
      </if>
    </set>
    where comment_id = #{commentId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.lkz.blog.pojo.Comment" >
    update blog_comment
    set blog_id = #{blogId,jdbcType=BIGINT},
      comment_user = #{commentUser,jdbcType=BIGINT},
      reply_for = #{replyFor},
      star_num = #{starNum},
      comment_content = #{commentContent,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      is_delete = #{isDelete,jdbcType=TINYINT}
    where comment_id = #{commentId,jdbcType=BIGINT}
  </update>

  <select id="selCommentByBlogId" resultMap="BaseResultMap" parameterType="LONG">
    select <include refid="Base_Column_List"></include>
    from  blog_comment
    where blog_id = #{blogId}
  </select>

  <select id="selCommentWithUserByBlogId" resultMap="BaseResultMapWithUser" parameterType="LONG">
    select <include refid="Base_Column_List"></include>,
    nick_name ,user_head
    from blog_comment left join blog_user on blog_comment.comment_user = blog_user.user_id
    where blog_comment.blog_id = #{blogId}
  </select>

</mapper>